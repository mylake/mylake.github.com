<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mylake</title>
    <description></description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 24 Oct 2017 10:57:34 +0800</pubDate>
    <lastBuildDate>Tue, 24 Oct 2017 10:57:34 +0800</lastBuildDate>
    <generator>Jekyll v3.2.0</generator>
    
      <item>
        <title>Good Team, Good Work</title>
        <description>&lt;h1 id=&quot;good-team-good-work&quot;&gt;good team, good work&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;之前和朋友聊天, 聊到一些開發團隊, 很容易會遇到的幾個問題&lt;/p&gt;

  &lt;p&gt;因此想在這邊分享一下看法以及過去經驗裡實際運用的解法&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;有討論到的幾個問題分別是&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;sprint 會議的問題&lt;/li&gt;
    &lt;li&gt;對於 bug 沒有危機意識&lt;/li&gt;
    &lt;li&gt;如何開始 devops&lt;/li&gt;
    &lt;li&gt;如何加快團隊步調&lt;/li&gt;
    &lt;li&gt;沒有 ownership&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;sprint-&quot;&gt;1. sprint 會議的問題&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;沒有效率, 沒有檢討會議, 沒有後續追蹤&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;目前 sprint meeting 沒有效率, 發生的情況是:
&amp;gt;
&amp;gt; * 沒有人負責且知道大家手上有哪些事情
&amp;gt; * 會議上所有人同時浪費很多時間在看 ticket, 想解法&lt;/p&gt;

&lt;p&gt;我覺得這邊有幾個需要改善的點&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;RD resource 不明, leader 需要掌握 RD resource&lt;/li&gt;
  &lt;li&gt;需要 leader 與 PM 的 Sprint Planning Meet&lt;/li&gt;
  &lt;li&gt;retrospective meeting 要持續 並且有後續追蹤 不然沒意義&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;leader 需要能掌握大家目前手上的事情, 至少也必須在 Sprint Planning Meet 確認幾件事情&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;分析票 確實知道票要做什麼&lt;/li&gt;
    &lt;li&gt;確認哪些票是要放在這個 sprint&lt;/li&gt;
    &lt;li&gt;sprint meeting 和大家變成只是分配工作&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;如此一來 leader 也可掌握每個人手頭上的工作, 臨時插單也會知道是誰來處理&lt;/p&gt;

  &lt;p&gt;之後的 spring meeting 大家再根據接到的任務 自己看需不需要切小票&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;每日 stand up meeting 回報應該是最基本需要做到的事情&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;bug-&quot;&gt;2. 對於 bug 沒有危機意識&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;不知道事情的嚴重性？business sense ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我覺得可以這樣改善&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;初期可以試著讓每個人 輪流 deploy production&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;當你要 deploy production 的時候, 你一定會比較謹慎&lt;/p&gt;

  &lt;p&gt;會注意到 deploy 完之後, 有沒有什麼 bug 出現, 會慢慢的培養對 bug 的敏感度&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;devops&quot;&gt;3. 如何開始 devops&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;扯一下現在很紅的 devops, 我是覺得要當一個好的 RD, 其實也要當過一陣子的 operation&lt;/p&gt;

  &lt;p&gt;因為假如你有維運的經驗 其實你會知道寫程式時 哪些地方要特別注意 哪些地方要特別加 log, 以利之後查詢&lt;/p&gt;

  &lt;p&gt;這其實也是一種自己的 feature 自己維運的概念 (但這又牽扯到未來的 micro-service 概念, micro-service 的一個很重要的點應該是 Boundaries and Responsibility )&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我覺得可以這樣開始：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;如果在一團混亂中, 最重要的是要先訂立基本的規範, 讓大家遵守, 而不能只是靠某些人的自動自發
  &amp;gt; 一開始先有資深同仁專責, 負責 operation 上的監控, 建立起基本維運所需注意事項流程, bug 回報處理機制&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;再輪班每週專人負責監控 處理 bug (&lt;a href=&quot;https://www.honeybadger.io/&quot;&gt;honeybadger&lt;/a&gt;, 或其他 issue) (但前題是大家都需要看 &lt;a href=&quot;https://www.honeybadger.io/&quot;&gt;honeybadger&lt;/a&gt;, 自己的 bug 要自己解)
  &amp;gt; 輪班負責後, 大家也會對於系統 bug 問題敏感度更高, 也會更加了解系統
  每週輪班維運人員必須要整理需要監控的地方, 異常處理回復的工具, 並且加入 sprint 的需求中, 如此也可慢慢養成 devops 的觀念
  &amp;gt;
  &amp;gt; 輪班是因為要先有人負責, 防止大家都沒人去處理, 至少有人會去意識到問題的嚴重性&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section&quot;&gt;4. 如何加快團隊步調&lt;/h3&gt;
&lt;p&gt;我的想法是&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;拉快 review 節奏 團隊的步調自然就會加快&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;而 review 的重點其實不是結果, 而是有進度&lt;/p&gt;

  &lt;p&gt;這樣做的好處是: 同事會知道無法每天都是同樣的進度&lt;/p&gt;

  &lt;p&gt;而且 leader 也會更明確的知道無法完成的難處, 並且給予協助&lt;/p&gt;

  &lt;p&gt;如此應該只要持續個一個月 必定能改變團隊整個的做事步調 方式&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;ownership&quot;&gt;5. 沒有 ownership&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;模糊地帶的問題, 沒人管&lt;/p&gt;

  &lt;p&gt;常常有計畫了 卻沒去執行&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我的想法是&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果有這種問題 leader 可能必須自己先以身作則, 當個有 ownership 以及 leadership 的人 先做團隊的榜樣&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;具備這種特質的人, 通常會自己去找方法, 資源來解決問題, 而且也通常會知道團隊到底有什麼問題 並且帶領團隊解決&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;我覺得團隊的文化, 是取決於 leader 是什麼風格, 因為文化的形成是一個上行下校, 不斷累積的過程, 因此 leader 的以身作則是相當重要的&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-1&quot;&gt;結語&lt;/h3&gt;

&lt;p&gt;這只是和朋友聊天, 討論的一些感想&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;一個好的環境是非常重要的 你可以學習到正確的態度與流程 尤其是對於新鮮人而言&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;另外也覺得 人才非常重要, 但更重要的是, 誰來帶領這些人才&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;如果有一個好的 leader 我相信上述的問題&lt;/p&gt;

  &lt;p&gt;即使發生 也會很快的解決 若不能及時解決&lt;/p&gt;

  &lt;p&gt;也會讓你感受到團隊是有往好的方向的發展&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sun, 08 Oct 2017 20:00:00 +0800</pubDate>
        <link>/2017/10/08/good-team-good-work/</link>
        <guid isPermaLink="true">/2017/10/08/good-team-good-work/</guid>
        
        <category>life</category>
        
        
      </item>
    
      <item>
        <title>43</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“strive 7/29 ~ 8/05”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;use&quot;&gt;Use&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/google/protobuf/tree/master/ruby&quot;&gt;protobuf ruby&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;read&quot;&gt;Read&lt;/h2&gt;

&lt;h2 id=&quot;book&quot;&gt;Book&lt;/h2&gt;

&lt;h2 id=&quot;video&quot;&gt;Video&lt;/h2&gt;

&lt;h2 id=&quot;learn&quot;&gt;Learn&lt;/h2&gt;
</description>
        <pubDate>Sat, 05 Aug 2017 08:00:00 +0800</pubDate>
        <link>/2017/08/05/1/</link>
        <guid isPermaLink="true">/2017/08/05/1/</guid>
        
        <category>weekly</category>
        
        
      </item>
    
      <item>
        <title>42</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“strive 7/22 ~ 7/29”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;use&quot;&gt;Use&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/google/protobuf/tree/master/ruby&quot;&gt;protobuf ruby&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;read&quot;&gt;Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[microservice] &lt;a href=&quot;https://medium.com/technology-learning/how-we-solved-authentication-and-authorization-in-our-microservice-architecture-994539d1b6e6&quot;&gt;How We Solved Authentication and Authorization in Our Microservice Architecture&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[microservice] &lt;a href=&quot;https://medium.com/technology-learning/event-sourcing-and-cqrs-a-look-at-kafka-e0c1b90d17d8&quot;&gt;Building Scalable Applications Using Event Sourcing and CQRS&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[microservice] &lt;a href=&quot;https://medium.com/technology-learning/microservices-migration-lessons-learned-f84166ec7eb0&quot;&gt;Microservices Migration: Lessons Learned&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[microservice] &lt;a href=&quot;https://medium.com/@briceicle/migrating-from-a-monolith-to-a-microservices-architecture-99cecf8af366&quot;&gt;Migrating from a Monolith to a Microservices Architecture&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[microservice] &lt;a href=&quot;https://medium.com/technology-learning/building-out-antifragile-microservice-andela-design-consideration-d6e03a185d6a&quot;&gt;Building Out an Antifragile Microservice Architecture&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[Protobuf] &lt;a href=&quot;https://yami.io/protobuf/&quot;&gt;比起 JSON 更方便、更快速、更簡短的 Protobuf 格式&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[graph db] &lt;a href=&quot;https://medium.com/finc-engineering/graph-db-diving-into-janusgraph-part-2-f4b9cbd967ac&quot;&gt;Graph DB — diving into JanusGraph part 2&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[db] &lt;a href=&quot;https://schneems.com/2017/07/18/how-i-reduced-my-db-server-load-by-80/&quot;&gt;How I Reduced my DB Server Load by 80%&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Use databases to enforce data consistency when possible instead of application code.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;book&quot;&gt;Book&lt;/h2&gt;

&lt;h2 id=&quot;video&quot;&gt;Video&lt;/h2&gt;

&lt;h2 id=&quot;learn&quot;&gt;Learn&lt;/h2&gt;
</description>
        <pubDate>Sat, 29 Jul 2017 08:00:00 +0800</pubDate>
        <link>/2017/07/29/1/</link>
        <guid isPermaLink="true">/2017/07/29/1/</guid>
        
        <category>weekly</category>
        
        
      </item>
    
      <item>
        <title>41</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“strive 7/15 ~ 7/22”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;use&quot;&gt;Use&lt;/h2&gt;

&lt;h2 id=&quot;read&quot;&gt;Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[js] &lt;a href=&quot;http://blog.techbridge.cc/2016/04/04/react-react-native-es5-es6-cheat-sheet/&quot;&gt;一看就懂的 React ES5、ES6+ 常見用法對照表&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[js] &lt;a href=&quot;http://taobaofed.org/blog/2016/08/18/react-redux-connect/&quot;&gt;React 实践心得：react-redux 之 connect 方法详解&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[code] &lt;a href=&quot;http://www.yinwang.org/blog-cn/2017/07/06/master-pl&quot;&gt;如何掌握所有的程序语言&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[system] &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-14-04&quot;&gt;How To Add Swap on Ubuntu&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;book&quot;&gt;Book&lt;/h2&gt;

&lt;h2 id=&quot;video&quot;&gt;Video&lt;/h2&gt;

&lt;h2 id=&quot;learn&quot;&gt;Learn&lt;/h2&gt;
</description>
        <pubDate>Sat, 22 Jul 2017 08:00:00 +0800</pubDate>
        <link>/2017/07/22/1/</link>
        <guid isPermaLink="true">/2017/07/22/1/</guid>
        
        <category>weekly</category>
        
        
      </item>
    
      <item>
        <title>40</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“strive 7/08 ~ 7/15”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;use&quot;&gt;Use&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/voormedia/rails-erd&quot;&gt;Rails ERD&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;read&quot;&gt;Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;http://www.justinweiss.com/articles/how-rails-sessions-work/&quot;&gt;How Rails Sessions Work&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;http://tech.shaolin.tw/posts/2013/12/17/security-issue-of-rails-cookiestore-mechanism/&quot;&gt;Rails CookieStore 的安全議題&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[algorithm] &lt;a href=&quot;http://www.cnblogs.com/liuzhen1995/p/6395361.html&quot;&gt;字符串的全排列和组合算法1&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[algorithm] &lt;a href=&quot;http://blog.csdn.net/hackbuteer1/article/details/7462447&quot;&gt;字符串的全排列和组合算法2&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[architect] &lt;a href=&quot;http://highscalability.com/youtube-architecture&quot;&gt;YouTube Architecture&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[architect] &lt;a href=&quot;http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster&quot;&gt;Scaling Twitter: Making Twitter 10000 Percent Faster&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[js] &lt;a href=&quot;http://blog.techbridge.cc/2017/07/15/javascript-event-propagation/&quot;&gt;DOM 的事件傳遞機制：捕獲與冒泡&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;book&quot;&gt;Book&lt;/h2&gt;

&lt;h2 id=&quot;video&quot;&gt;Video&lt;/h2&gt;

&lt;h2 id=&quot;learn&quot;&gt;Learn&lt;/h2&gt;
</description>
        <pubDate>Sat, 15 Jul 2017 08:00:00 +0800</pubDate>
        <link>/2017/07/15/1/</link>
        <guid isPermaLink="true">/2017/07/15/1/</guid>
        
        <category>weekly</category>
        
        
      </item>
    
      <item>
        <title>39</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“strive 7/01 ~ 7/08”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;use&quot;&gt;Use&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/aws/aws-sdk-ruby&quot;&gt;aws-sdk&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;read&quot;&gt;Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[architect] &lt;a href=&quot;http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones&quot;&gt;Scalability for Dummies - Part 1: Clones&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;load balance&lt;/li&gt;
      &lt;li&gt;multi server&lt;/li&gt;
      &lt;li&gt;an external database or an external persistent cache&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[architect] &lt;a href=&quot;http://blog.csdn.net/v_july_v/article/details/6279498&quot;&gt;十道海量数据处理面试题与十个方法大总结&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[data structure] &lt;a href=&quot;https://puremonkey2010.blogspot.tw/2010/11/blog-post_25.html&quot;&gt;排序 : 堆積排序法&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[atchitect] &lt;a href=&quot;http://blog.csdn.net/v_july_v/article/details/7382693&quot;&gt; 教你如何迅速秒杀掉：99%的海量数据处理面试题&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;## Book&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;video&quot;&gt;Video&lt;/h2&gt;

&lt;h2 id=&quot;learn&quot;&gt;Learn&lt;/h2&gt;
</description>
        <pubDate>Sat, 08 Jul 2017 08:00:00 +0800</pubDate>
        <link>/2017/07/08/1/</link>
        <guid isPermaLink="true">/2017/07/08/1/</guid>
        
        <category>weekly</category>
        
        
      </item>
    
      <item>
        <title>38</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“strive 6/10 ~ 7/01”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;use&quot;&gt;Use&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/weshatheleopard/rubyXL&quot;&gt;rubyXL&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;This gem supports operating on xlsx files&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[tool] &lt;a href=&quot;http://cms.35g.tw/coding/%E5%88%A9%E7%94%A8-iperf-%E6%B8%AC%E8%A9%A6%E7%B6%B2%E8%B7%AF%E6%95%88%E8%83%BD/&quot;&gt;利用 iperf 測試網路效能&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;read&quot;&gt;Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;http://blog.scoutapp.com/articles/2017/01/24/activerecord-includes-vs-joins-vs-preload-vs-eager_load-when-and-where&quot;&gt;Making sense of ActiveRecord joins, includes, preload, and eager_load&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[algorithm] &lt;a href=&quot;http://www.cricode.com/254.html&quot;&gt; 判断一个字符串中的字符是否唯一&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[algorithm] &lt;a href=&quot;http://www.cricode.com/258.html&quot;&gt; 字符串翻转&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[algorithm] &lt;a href=&quot;http://www.cricode.com/260.html&quot;&gt; 去除字符串中重复字符&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[algorithm] &lt;a href=&quot;http://www.cricode.com/284.html&quot;&gt; 利用已知函数判断字符串是否为另一字符串的子串&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[algorithm] &lt;a href=&quot;http://www.cricode.com/286.html&quot;&gt; 从链表中移除重复结点&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[algorithm] &lt;a href=&quot;http://www.cricode.com/288.html&quot;&gt; 实现一个算法从一个单链表中返回倒数第n个元素&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[algorithm] &lt;a href=&quot;http://www.cricode.com/291.html&quot;&gt; 给定链表中间某结点指针，删除链表中该结点&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[algorithm] &lt;a href=&quot;http://www.cricode.com/293.html&quot;&gt; 求由两个链表结点组成的数之和&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;http://blog.bigbinary.com/2012/01/08/alias-vs-alias-method.html&quot;&gt;alias vs alias_method&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;https://rossta.net/blog/what-is-enumerator.html&quot;&gt;What the Heck is a Ruby Enumerator&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;book&quot;&gt;Book&lt;/h2&gt;

&lt;h2 id=&quot;video&quot;&gt;Video&lt;/h2&gt;

&lt;h2 id=&quot;learn&quot;&gt;Learn&lt;/h2&gt;
</description>
        <pubDate>Sat, 01 Jul 2017 08:00:00 +0800</pubDate>
        <link>/2017/07/01/1/</link>
        <guid isPermaLink="true">/2017/07/01/1/</guid>
        
        <category>weekly</category>
        
        
      </item>
    
      <item>
        <title>37</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“strive 6/3 ~ 6/10”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;use&quot;&gt;Use&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/zdavatz/spreadsheet&quot;&gt;spreadsheet&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;read and write Spreadsheet Documents.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/weshatheleopard/rubyXL&quot;&gt;rubyXL&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;This gem supports operating on xlsx files&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;read&quot;&gt;Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[nginx] &lt;a href=&quot;https://my.oschina.net/xsh1208/blog/199674&quot;&gt;NGINX配置超时时间&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;keepalive_timeout&lt;/li&gt;
      &lt;li&gt;proxy_send_timeout&lt;/li&gt;
      &lt;li&gt;proxy_read_timeout&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[nginx] &lt;a href=&quot;https://stackoverflow.com/questions/22856136/why-underscores-are-forbidden-in-http-header-names&quot;&gt;Why underscores are forbidden in HTTP header names&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;If you do not explicitly set underscores_in_headers on;, nginx will silently drop HTTP headers with underscores (which are perfectly valid according to the HTTP standard). This is done in order to prevent ambiguities when mapping headers to CGI variables, as both dashes and underscores are mapped to underscores during that process.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;https://www.jamesbadger.ca/2012/12/18/generate-new-secret-token/&quot;&gt;Generate a new secret token for Rails Apps&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;SecureRandom.hex(64)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[postgres] &lt;a href=&quot;https://www.postgresql.org/docs/9.1/static/sql-vacuum.html&quot;&gt;sql-vacuum&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[sql] &lt;a href=&quot;https://www.periscopedata.com/blog/use-subqueries-to-count-distinct-50x-faster.html&quot;&gt;Use Subqueries to Count Distinct 50X Faster&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Reduce The Data Set&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;book&quot;&gt;Book&lt;/h2&gt;

&lt;h2 id=&quot;video&quot;&gt;Video&lt;/h2&gt;

&lt;h2 id=&quot;learn&quot;&gt;Learn&lt;/h2&gt;
</description>
        <pubDate>Sat, 10 Jun 2017 08:00:00 +0800</pubDate>
        <link>/2017/06/10/1/</link>
        <guid isPermaLink="true">/2017/06/10/1/</guid>
        
        <category>weekly</category>
        
        
      </item>
    
      <item>
        <title>36</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“strive 5/20 ~ 6/3”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;use&quot;&gt;Use&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/apneadiving/Google-Maps-for-Rails&quot;&gt;Google Maps for Rails&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;read&quot;&gt;Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;https://blog.cognitohq.com/five-pry-features-every-ruby-developer-should-know/&quot;&gt;5 Pry Features Every Ruby Developer Should Know&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;ls&lt;/li&gt;
      &lt;li&gt;ls -l&lt;/li&gt;
      &lt;li&gt;find-method xpath Nokogiri&lt;/li&gt;
      &lt;li&gt;stat Nokogiri::CSS.xpath_for&lt;/li&gt;
      &lt;li&gt;show-source Nokogiri::CSS.xpath_for&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[code] &lt;a href=&quot;https://rafal.io/posts/codility-intersecting-discs.html&quot;&gt;Codility Intersecting Discs&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[cors] &lt;a href=&quot;http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html&quot;&gt;浏览器同源政策及其规避方法&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[code] &lt;a href=&quot;https://www.zhihu.com/question/31034164?utm_content=buffer27dd2&amp;amp;utm_medium=social&amp;amp;utm_source=facebook.com&amp;amp;utm_campaign=buffer&quot;&gt;什么才算是真正的编程能力？&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;book&quot;&gt;Book&lt;/h2&gt;

&lt;h2 id=&quot;video&quot;&gt;Video&lt;/h2&gt;

&lt;h2 id=&quot;learn&quot;&gt;Learn&lt;/h2&gt;
</description>
        <pubDate>Sat, 03 Jun 2017 08:00:00 +0800</pubDate>
        <link>/2017/06/03/1/</link>
        <guid isPermaLink="true">/2017/06/03/1/</guid>
        
        <category>weekly</category>
        
        
      </item>
    
      <item>
        <title>35</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“strive 5/13 ~ 5/20”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;use&quot;&gt;Use&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/cyu/rack-cors&quot;&gt;rack-cors&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Rack::Cors provides support for Cross-Origin Resource Sharing (CORS) for Rack compatible web applications.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/alexreisner/geocoder&quot;&gt;Geocoder&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Geocoder is a complete geocoding solution for Ruby. With Rails, it adds geocoding (by street or IP address), reverse geocoding (finding street address based on given coordinates), and distance queries&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[database] &lt;a href=&quot;https://gist.github.com/esperlu/943776&quot;&gt;mysql2sqlite&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;This small shell script should help you to convert a mysqldump file into a Sqlite3 compatible file.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[react native] &lt;a href=&quot;https://github.com/andpor/react-native-sqlite-storage&quot;&gt;react-native-sqlite-storage&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;read&quot;&gt;Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[redis] &lt;a href=&quot;http://www.rediscookbook.org/multiple_databases.html&quot;&gt;Redis Working with Multiple Databases&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;you want to keep different kinds of data - belonging to different applications, for example - separate from each other, but store them all in the same Redis instance&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;https://robots.thoughtbot.com/ruby-2-keyword-arguments&quot;&gt;Ruby 2 Keyword Arguments&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;def obvious_total(subtotal:, tax:, discount:)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;http://hakunin.com/rails3-load-paths&quot;&gt;Tips on Rails 3 load paths &lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;http://stackoverflow.com/questions/19773266/confusing-about-autoload-paths-vs-eager-load-paths-in-rails-4&quot;&gt;confusing about autoload_paths vs eager_load_paths in rails 4&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;http://blog.arkency.com/2014/11/dont-forget-about-eager-load-when-extending-autoload/&quot;&gt;Don't forget about eager_load when extending autoload paths&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;https://blog.yorkxin.org/2014/02/10/autoload-in-ruby-autoload-paths-in-rails-and-module-reopening&quot;&gt;關於 Ruby 的 autoload 與 Rails 的 autoload_paths 以及 reopen module / class&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Kernel#autoload 不應跟 Rails 的 autoload_paths 混淆，要視為兩個完全不同的功能&lt;/li&gt;
      &lt;li&gt;誰第一次載入誰算數， Rails 只在找不到該 const 的時候才會去 autoload_paths 搜尋&lt;/li&gt;
      &lt;li&gt;所以，如果某個 const (class / module) 已經在 runtime 裡面定義了，那麼要在 Rails 裡面 reopen 它，就必須確定它一定會執行，例如 initializers 裡面，或是手動 require 它。如果是放在某個 autoload paths 裡面，例如 app/models/ ，則 Rails 並不會執行之，因為同名的 const 已經在 Runtime 裡面了。&lt;/li&gt;
      &lt;li&gt;如果該 class / module 已經在 Gem 裡面載入，則要在 Rails 裡面 reopen 它，就必須放在 autoload_paths 以外的地方，並且手動 require 之。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[cors] &lt;a href=&quot;http://www.ruanyifeng.com/blog/2016/04/cors.html&quot;&gt;跨域资源共享 CORS 详解&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[csrf] &lt;a href=&quot;http://blog.techbridge.cc/2017/02/25/csrf-introduction/&quot;&gt;讓我們來談談 CSRF&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[react native] &lt;a href=&quot;https://shift.infinite.red/beginner-s-guide-to-using-cocoapods-with-react-native-46cb4d372995&quot;&gt;Beginner’s Guide to Using CocoaPods with React Native&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;book&quot;&gt;Book&lt;/h2&gt;

&lt;h2 id=&quot;video&quot;&gt;Video&lt;/h2&gt;

&lt;h2 id=&quot;learn&quot;&gt;Learn&lt;/h2&gt;
</description>
        <pubDate>Sat, 20 May 2017 08:00:00 +0800</pubDate>
        <link>/2017/05/20/1/</link>
        <guid isPermaLink="true">/2017/05/20/1/</guid>
        
        <category>weekly</category>
        
        
      </item>
    
  </channel>
</rss>
