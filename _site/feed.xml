<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mylake</title>
    <description></description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 08 Nov 2016 20:04:09 +0800</pubDate>
    <lastBuildDate>Tue, 08 Nov 2016 20:04:09 +0800</lastBuildDate>
    <generator>Jekyll v3.2.0</generator>
    
      <item>
        <title>14</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“strive 10/31 ~ 11/05”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;use&quot;&gt;Use&lt;/h2&gt;

&lt;h2 id=&quot;read&quot;&gt;Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;https://www.sitepoint.com/why-learning-rails-is-still-a-great-choice-in-2016/&quot;&gt;Why Learning Rails Is Still a Great Choice in 2016&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;https://www.sitepoint.com/10-ruby-on-rails-best-practices-3/&quot;&gt;10 Ruby on Rails Best Practices&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;http://www.monkeyandcrow.com/blog/reading_rails_handling_exceptions/&quot;&gt;Handling Exceptions&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;A method signature like def rescue_from(klasses) takes a variable number of arguments.&lt;/li&gt;
      &lt;li&gt;Array#extract_options! is an idiomatic way to get options from an arguments array.&lt;/li&gt;
      &lt;li&gt;You can determine if a class is a subclass using klass &amp;lt;= Exception.&lt;/li&gt;
      &lt;li&gt;rescue nil will swallow exceptions&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[frontend] &lt;a href=&quot;http://www.fefork.com/%E5%89%8D%E7%AB%AF%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96/&quot;&gt;前端各种优化&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[js] &lt;a href=&quot;https://pjchender.blogspot.tw/p/blog-page_70.html&quot;&gt; 你所不知道的JavaScript: Understanding the Weird Part&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;book&quot;&gt;Book&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[saas] &lt;a href=&quot;http://www.books.com.tw/products/CN10495087&quot;&gt;互聯網時代的軟件革命︰SaaS架構設計&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;video&quot;&gt;Video&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[react native] &lt;a href=&quot;https://egghead.io/courses/react-native-fundamentals&quot;&gt;React Native Fundamentals&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[js] &lt;a href=&quot;https://egghead.io/courses/learn-es6-ecmascript-2015&quot;&gt;Learn ES6 (ECMAScript 2015)&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[rspec] Rails Pacific 2016 - Workshop _ Taming Chaotic Specs RSpec Design Patterns by Adam Cuppy&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[rspec] Rails Pacific 2016 - Server Infrastructure for Rails in 2016 by Richard Lee&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 05 Nov 2016 08:00:00 +0800</pubDate>
        <link>/2016/11/05/1/</link>
        <guid isPermaLink="true">/2016/11/05/1/</guid>
        
        <category>weekly</category>
        
        
      </item>
    
      <item>
        <title>13</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“strive 10/16 ~ 10/22”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;use&quot;&gt;Use&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[data analytics] &lt;a href=&quot;https://github.com/evollu/react-native-firebase-analytics&quot;&gt;firebase&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[data analytics] &lt;a href=&quot;https://github.com/xxsnakerxx/react-native-flurry-analytics&quot;&gt;flurry&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[data analytics] &lt;a href=&quot;https://github.com/facebook/react-native-fbsdk&quot;&gt;facebook analytics&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[data analytics] &lt;a href=&quot;https://github.com/corymsmith/react-native-fabric&quot;&gt;Fabric / Crashlytics&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;read&quot;&gt;Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;https://www.huxiu.com/article/130729.html&quot;&gt;Growth Hacking讓Facebook首頁5年未改版，人人網改版自掘墳墓的背後，缺少的是什麼&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;book&quot;&gt;Book&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[saas] &lt;a href=&quot;http://www.books.com.tw/products/CN10495087&quot;&gt;互聯網時代的軟件革命︰SaaS架構設計&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 29 Oct 2016 08:00:00 +0800</pubDate>
        <link>/2016/10/29/1/</link>
        <guid isPermaLink="true">/2016/10/29/1/</guid>
        
        <category>weekly</category>
        
        
      </item>
    
      <item>
        <title>12</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“strive 10/16 ~ 10/22”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;use&quot;&gt;Use&lt;/h2&gt;

&lt;h2 id=&quot;read&quot;&gt;Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;http://andrewberls.com/blog/post/rails-from-request-to-response-part-1--introduction&quot;&gt;Rails from Request to Response&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;https://robots.thoughtbot.com/back-to-basics-http-requests&quot;&gt;Back to Basics: HTTP Requests in Rails Apps&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[architect] &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;amp;mid=2650994320&amp;amp;idx=1&amp;amp;sn=522b995e9161f0a3534e70bdc5890f6d&amp;amp;chksm=bdbf0ec38ac887d5e33321aef54c9cad9b3fc3c3e6eb86192cecebf290df3a84c7316a1dd3e0&amp;amp;scene=0#wechat_redirect&quot;&gt;大促活動前如何做團購系統流量預算和容量評估&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;大促活動的特點: 瞬時流量, 熱點團單, 核心路徑&lt;/li&gt;
      &lt;li&gt;系統：業務按微服務化拆分出來，每個服務獨立專注的做一件事情&lt;/li&gt;
      &lt;li&gt;活動流量預算&lt;/li&gt;
      &lt;li&gt;壓力測試&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[facebook ios sdk] &lt;a href=&quot;https://developers.facebook.com/docs/ios/getting-started/#app-events&quot;&gt;Facebook iOS SDK 新手指南&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[React Native, Firebase] &lt;a href=&quot;http://blog.techbridge.cc/2016/09/10/react-native-redux-android-firebase/&quot;&gt;一看就懂的 React Native + Firebase Mobile App 入門教學&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[flex] &lt;a href=&quot;http://www.flexboxdefense.com/&quot;&gt;flexboxdefense&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;book&quot;&gt;Book&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;https://pragprog.com/book/jvrails2/crafting-rails-4-applications&quot;&gt;Crafting Rails 4 Applications&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[saas] &lt;a href=&quot;http://www.books.com.tw/products/CN10495087&quot;&gt;互聯網時代的軟件革命︰SaaS架構設計&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 22 Oct 2016 08:00:00 +0800</pubDate>
        <link>/2016/10/22/1/</link>
        <guid isPermaLink="true">/2016/10/22/1/</guid>
        
        <category>weekly</category>
        
        
      </item>
    
      <item>
        <title>11</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“strive 10/9 ~ 10/15”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;use&quot;&gt;Use&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/krisleech/wisper&quot;&gt;https://github.com/krisleech/wisper&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;A micro library providing Ruby objects with Publish-Subscribe capabilities&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[monitor] &lt;a href=&quot;https://mmonit.com/monit/&quot;&gt;monit&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;read&quot;&gt;Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;https://ruby-china.org/topics/31164&quot;&gt;ruby conf china 2016&lt;/a&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;[rails] &lt;a href=&quot;https://speakerdeck.com/poshboytl/building-api-for-the-rest-of-us&quot;&gt;Building API For The REST of Us&lt;/a&gt;&lt;/p&gt;
        &lt;ul&gt;
          &lt;li&gt;authenticaion base on the payload and access key&lt;/li&gt;
          &lt;li&gt;After user signup send him a welcome email =&amp;gt; use service and be called on controller&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;[rails] &lt;a href=&quot;https://speakerdeck.com/zmbacker/da-zao-ruby-kai-fa-tuan-dui-de-hang-mu&quot;&gt;打造 Ruby 开发团队的航母&lt;/a&gt;&lt;/p&gt;
        &lt;ul&gt;
          &lt;li&gt;元件化 可組裝應用 將各個可共用功能都拆成gem, rails engine&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;[rails] &lt;a href=&quot;https://speakerdeck.com/windy/ru-he-li-yong-rails-zai-21-tian-dan-qiang-pi-ma-shang-xian-ge-chan-pin&quot;&gt;如何利用 Rails 在 21 天单枪匹马上线一个产品 &lt;/a&gt;&lt;/p&gt;
        &lt;ul&gt;
          &lt;li&gt;快速打造產品的步驟及能力&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;[rails] &lt;a href=&quot;https://speakerdeck.com/pmq20/huan-jing-bian-liang-wei-he-neng-rang-ruby-kuai-shi-bei&quot;&gt;环境变量 为何能让 Ruby 快十倍&lt;/a&gt;&lt;/p&gt;
        &lt;ul&gt;
          &lt;li&gt;優化好Bundler&lt;/li&gt;
          &lt;li&gt;bundler/setup之後 大量環境變數被修改&lt;/li&gt;
          &lt;li&gt;bundle/setup 後 會比較目前Gemfile, Gemfile.lock, 等於浪費時間去載比較一次Gemfile, 因為已經有Gemfile.lock了&lt;/li&gt;
          &lt;li&gt;解法: Bundler.with_clean_env&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;[rails] &lt;a href=&quot;https://speakerdeck.com/xdite/refactoring-lesson-from-gpa-1-dot-4-to-gpa-3-dot-0&quot;&gt;Refactoring lesson : from GPA 1.4 to GPA 3.0&lt;/a&gt;&lt;/p&gt;
        &lt;ul&gt;
          &lt;li&gt;refactor 原則&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;[rails] &lt;a href=&quot;https://speakerdeck.com/mechiland/reconsider-rest-chong-gou-jian-da-xing-railsying-yong-de-fang-shi&quot;&gt;Reconsider REST: 一种构建大型Rails应用的方式&lt;/a&gt;&lt;/p&gt;
        &lt;ul&gt;
          &lt;li&gt;定義資源 思考資源的含意 而不是動作&lt;/li&gt;
          &lt;li&gt;思考資源的業務意義 而不是資料表&lt;/li&gt;
          &lt;li&gt;routes.rb 中不出現動詞&lt;/li&gt;
          &lt;li&gt;使用標準HTTP Verb + Resource 組裝業務邏輯&lt;/li&gt;
          &lt;li&gt;每個controller 不超過CRUD標準方法&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;[rails] &lt;a href=&quot;https://speakerdeck.com/xiewenwei/ru-he-gei-rails-ying-yong-jian-fei-bo-he-wei-fu-wu-hua-shi-jian&quot;&gt;如何给 Rails 应用减肥 - 薄荷微服务化实践&lt;/a&gt;&lt;/p&gt;
        &lt;ul&gt;
          &lt;li&gt;根據業務運行粒度適中的劃分
            &lt;ul&gt;
              &lt;li&gt;按性質 獨立基礎服務&lt;/li&gt;
              &lt;li&gt;按業務 按產品&lt;/li&gt;
              &lt;li&gt;按團隊 康威定律&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;建立簡便的服務煎通信機制和跨服務數據訪問的能力&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;[rails] &lt;a href=&quot;https://speakerdeck.com/danielglh/da-zao-guo-ji-hua-chan-pin-strikinglyde-i18nshi-jian&quot;&gt;打造国际化产品：Strikingly的I18n实践 &lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[architect] &lt;a href=&quot;http://www.infoq.com/cn/articles/every-architect-should-study-conway-law?utm_campaign=infoq_content&amp;amp;utm_source=infoq&amp;amp;utm_medium=feed&amp;amp;utm_term=global&quot;&gt;每個架構師都應該研究下康威定律&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;http://yafeilee.me/blogs/88&quot;&gt;Turbolinks5 概述及實現原理&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;http://railscasts.com/episodes/239-activerecord-relation-walkthrough?view=asciicast&quot;&gt;ActiveRecord::Relation Walkthrough&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;https://www.viget.com/articles/using-time-zones-with-rails&quot;&gt;Using Time Zones with Rails&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[HTTP] &lt;a href=&quot;http://www.ruanyifeng.com/blog/2016/04/cors.html&quot;&gt;跨域資源共享CORS 詳解&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;CORS需要瀏覽器和服務器同時支持&lt;/li&gt;
      &lt;li&gt;簡單請求=&amp;gt; 具體來說，就是在頭信息之中，增加一個Origin字段&lt;/li&gt;
      &lt;li&gt;非簡單請求
        &lt;ul&gt;
          &lt;li&gt;預檢請求 =&amp;gt; “預檢”請求用的請求方法是OPTIONS&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;book&quot;&gt;Book&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;https://pragprog.com/book/jvrails2/crafting-rails-4-applications&quot;&gt;Crafting Rails 4 Applications&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;chapter2: Building Models with Active Model
        &lt;ul&gt;
          &lt;li&gt;Adding Attribute Methods
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;include ActiveModel::AttributeMethods&lt;/code&gt; 1) attribute methods behavior&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;attribute_method_prefix 'clear_'&lt;/code&gt; 2) clear_ is attribute prefix&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;define_attribute_methods(names)&lt;/code&gt; 3) Ask to define the prefix methods for the given attribute names&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;def clear_attribute(attribute)&lt;/code&gt; 4) Since we declared a “clear_” prefix, it expects to have a “clear_attribute” method defined, which receives an attributen ame and implements the clearing logic.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Aiming for an Active Model–Compliant API
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;include ActiveModel::Conversion&lt;/code&gt;
                &lt;ul&gt;
                  &lt;li&gt;to_key(), to_param(), and to_partial_path()&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;extend ActiveModel::Naming&lt;/code&gt;
                &lt;ul&gt;
                  &lt;li&gt;human(), singular()&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;extend ActiveModel::Translation&lt;/code&gt;
                &lt;ul&gt;
                  &lt;li&gt;i18n&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Delivering the Form
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;class_attribute :attribute_names&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;self.attribute_names = []&lt;/code&gt; 1) Define a class attribute and initialize it&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;self.attribute_names += names&lt;/code&gt; 2) Add new names as they are defined&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;initialize set value&lt;/p&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def initialize(attributes = {})ttributes.each do |attr, value|
  self.public_send(&quot;#{attr}=&quot;, value)
  end if attributes
end
&lt;/code&gt;&lt;/pre&gt;
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;Validators
            &lt;ul&gt;
              &lt;li&gt;validates_presence_of&lt;/li&gt;
            &lt;/ul&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def validates_presence_of(*attr_names)
  validates_with PresenceValidator, _merge_attributes(attr_names)
end
&lt;/code&gt;&lt;/pre&gt;
            &lt;/div&gt;

            &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;const_get(&quot;#{key.to_s.camelize}Validator&quot;)&lt;/code&gt;&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;ActiveModel::EachValidator&lt;/li&gt;
            &lt;/ul&gt;

            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class AbsenceValidator &amp;lt; ActiveModel::EachValidator
  def validate_each(record, attribute, value)
    record.errors.add(attribute, :invalid, options) unless value.blank?
  end
end
&lt;/code&gt;&lt;/pre&gt;
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;Callbacks
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;extend ActiveModel::Callbacks&lt;/code&gt; 1) Add callbacks behavior&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;define_model_callbacks :deliver&lt;/code&gt; 2) Define the callbacks. The line below will create both before_deliver, and after_deliver callbacks with the same semantics as in Active Record&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;run_callbacks(:deliver) {}&lt;/code&gt; Change deliver to run the callbacks&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 15 Oct 2016 08:00:00 +0800</pubDate>
        <link>/2016/10/15/1/</link>
        <guid isPermaLink="true">/2016/10/15/1/</guid>
        
        <category>weekly</category>
        
        
      </item>
    
      <item>
        <title>10</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“strive 10/1 ~ 10/8”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;use&quot;&gt;Use&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/aws/aws-sdk-ruby&quot;&gt;aws-sdk-ruby&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/fnando/browser&quot;&gt;browser&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Do some browser detection with Ruby. Includes ActionController integration.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;read&quot;&gt;Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[web] &lt;a href=&quot;http://2014.jsconf.cn/slides/herman-taobaoweb/index.html#/&quot;&gt;掏寶前後端分離實踐&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[web] &lt;a href=&quot;http://blog.tryneighborly.com/amazon-sns-for-apns-on-rails/&quot;&gt;How we integrated Amazon SNS with Rails for Apple Push Notifications&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[design pattern] &lt;a href=&quot;http://sibevin.github.io/posts/2016-09-26-195847-command-pattern&quot;&gt;Command Pattern sample&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[frontend] &lt;a href=&quot;https://www.rapospectre.com/blog/web-page-loading-optimize-guide&quot;&gt;400%飛躍：Web 頁面加載速度優化實戰&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;https://gist.github.com/dhh/2492118&quot;&gt;routes refactor&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[architect] &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5Nzc4OTA1Mw==&amp;amp;mid=2659598234&amp;amp;idx=1&amp;amp;sn=f36c03f8702add6ef5bcfbc9e65e27fe&amp;amp;scene=0#wechat_redirect&quot;&gt;日消息量突破50億，談小米的高可用推送系統設計&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[rspec] &lt;a href=&quot;https://relishapp.com/rspec/rspec-mocks/docs/working-with-legacy-code/any-instance&quot;&gt;allow_any_instance_of&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;expect_any_instance_of&lt;/li&gt;
      &lt;li&gt;allow_any_instance_of&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[architect] &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5Nzc4OTA1Mw==&amp;amp;mid=2659598195&amp;amp;idx=1&amp;amp;sn=a69628c628c474d1b1368d139d64714f&amp;amp;scene=0#wechat_redirect&quot;&gt;阿里巴巴店舖的十年技術演變之路&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;前後端一致的元件化&lt;/li&gt;
      &lt;li&gt;統一數據中心&lt;/li&gt;
      &lt;li&gt;開放的設計平台&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;https://ruby-china.org/topics/5066&quot;&gt;ActiveRecord::Base與ActiveRecord::Relation關係及基本原理&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[article] &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;amp;mid=2650994277&amp;amp;idx=1&amp;amp;sn=f0d3c25d805503264a78ab5eeb29044d&amp;amp;chksm=bdbf0e368ac88720da10e901457fdbee77a90a426c20a3b95316fcbc6c8ab7b1afbd55950ad3&amp;amp;scene=21#wechat_redirect&quot;&gt;天天寫「業務代碼」，如何成為「技術大牛」？&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;book&quot;&gt;Book&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[rails] &lt;a href=&quot;https://pragprog.com/book/jvrails2/crafting-rails-4-applications&quot;&gt;Crafting Rails 4 Applications&lt;/a&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Creating Our Own Renderer
        &lt;ol&gt;
          &lt;li&gt;controller call render&lt;/li&gt;
          &lt;li&gt;ActionController::Instrumentation render&lt;/li&gt;
          &lt;li&gt;AbstractController::Rendering render
            &lt;ul&gt;
              &lt;li&gt;3.1. AbstractController::Rendering _normalize_render
                &lt;ul&gt;
                  &lt;li&gt;3.1.1. AbstractController::Rendering _normalize_args&lt;/li&gt;
                  &lt;li&gt;3.1.1.1 ActionController::Rendering _normalize_args&lt;/li&gt;
                  &lt;li&gt;3.1.1.2 ActionView::Rendering _normalize_args&lt;/li&gt;
                  &lt;li&gt;
                    &lt;p&gt;3.1.1.3 AbstractController::Rendering _normalize_args&lt;/p&gt;
                  &lt;/li&gt;
                  &lt;li&gt;3.1.2 AbstractController::Rendering _normalize_options&lt;/li&gt;
                  &lt;li&gt;3.1.2.1 ActionController::Rendering _normalize_options&lt;/li&gt;
                  &lt;li&gt;3.1.2.2 ActionController::Rendering _normalize_text&lt;/li&gt;
                  &lt;li&gt;3.1.2.3 ActionView::Layouts _normalize_options&lt;/li&gt;
                  &lt;li&gt;3.1.2.4 ActionView::Rendering _normalize_options&lt;/li&gt;
                  &lt;li&gt;3.1.2.5 AbstractController::Rendering _normalize_options&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;3.2 AbstractController::Rendering render_to_body
                &lt;ul&gt;
                  &lt;li&gt;3.2.1 ActionController::Renderers render_to_body&lt;/li&gt;
                  &lt;li&gt;3.2.1.1 ActionView::Rendering render_to_body =&amp;gt; _process_options =&amp;gt; _render_template&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 08 Oct 2016 08:00:00 +0800</pubDate>
        <link>/2016/10/08/1/</link>
        <guid isPermaLink="true">/2016/10/08/1/</guid>
        
        <category>weekly</category>
        
        
      </item>
    
      <item>
        <title>9</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“strive 9/24 ~ 10/1”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;use&quot;&gt;Use&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/stripe/stripe-ruby&quot;&gt;stripe-ruby&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/jwt/ruby-jwt&quot;&gt;ruby-jwt&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;read&quot;&gt;Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;http://olivierlacan.com/posts/concurrency-in-ruby-3-with-guilds/&quot;&gt;Concurrency in Ruby 3 with Guilds&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[JWT] &lt;a href=&quot;http://blog.leapoahead.com/2015/09/07/user-authentication-with-jwt/&quot;&gt;八幅漫畫理解使用JSON Web Token設計單點登錄系統&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[JWT] &lt;a href=&quot;https://www.sitepoint.com/introduction-to-using-jwt-in-rails/&quot;&gt;An Introduction to Using JWT Authentication in Rails&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[open source] &lt;a href=&quot;http://www.erikaheidi.com/blog/a-beginners-guide-to-open-source-making-your-first-contribution&quot;&gt;A Beginner's Guide to Open Source&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[open source] &lt;a href=&quot;http://www.nearform.com/nodecrunch/first-time-with-open-source/&quot;&gt;first-time-with-open-source&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;book&quot;&gt;Book&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;http://martinfowler.com/books/refactoringRubyEd.html&quot;&gt;Refactoring Ruby Edition&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;learn&quot;&gt;Learn&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;關於sidekiq有兩個process 但重起或重deploy時 只會起來一個process的問題, 我修改了monit
用monit不同的pid去解決掉這個問題
production sidekiq server中的monit設定檔看到 /etc/monit/monitrc
假如偵測pid不見了就會自動重起&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;目前發現 nginx 造成 header 方面的問題:&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;header 中有 underline 會被 nginx 視為 invalid ， invalid 會被過濾掉，所以 ILAKE_CS -&amp;gt; ILAKE-CS&lt;/li&gt;
      &lt;li&gt;header 中沒有 X- 開頭的也會被視為 invalid，所以 ILAKE-CS -&amp;gt; X-ILAKE-CS&lt;/li&gt;
      &lt;li&gt;進入 rails 後所有的 - 會換成 _ ，然後加上 HTTP_ 當 prefix ，所以在 rails 裡面要用 “HTTP_X_ILAKE_CS” 來取值&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 01 Oct 2016 00:00:00 +0800</pubDate>
        <link>/2016/10/01/1/</link>
        <guid isPermaLink="true">/2016/10/01/1/</guid>
        
        <category>weekly</category>
        
        
      </item>
    
      <item>
        <title>8</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“strive 9/17 ~ 9/24”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;use&quot;&gt;Use&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/resque/resque-scheduler&quot;&gt;resque-scheduler&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;read&quot;&gt;Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[api] &lt;a href=&quot;https://marcelo-cure.blogspot.tw/2016/09/rest-anti-patterns.html?utm_source=wanqu.co&amp;amp;utm_campaign=Wanqu+Daily&amp;amp;utm_medium=website&quot;&gt;REST anti-patterns&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;https://speakerdeck.com/a_matsuda/why-still-ruby&quot;&gt;Why (Still) Ruby&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;book&quot;&gt;Book&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[engineer] &lt;a href=&quot;http://www.theeffectiveengineer.com/&quot;&gt;THE EFFECTIVE ENGINEER&lt;/a&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Part 1: Adopt the Right Mindsets&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;chapter1: Focus on High-Leverage Activities
            &lt;ul&gt;
              &lt;li&gt;要學會衡量什麼各個事情的價值&lt;/li&gt;
              &lt;li&gt;做最有價值的事情&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;chapter2: Optimize for learning
            &lt;ul&gt;
              &lt;li&gt;做你能掌控的事情&lt;/li&gt;
              &lt;li&gt;加快你的學習速度&lt;/li&gt;
              &lt;li&gt;找到好的環境能讓你成長更快的&lt;/li&gt;
              &lt;li&gt;多多善用工作上的資源 來提升你的技術, 跟團隊最強的工程師學西&lt;/li&gt;
              &lt;li&gt;再工作之外學習, 社群通常都是對此技術很有興趣 且以此為樂的人&lt;/li&gt;
              &lt;li&gt;永遠都在學習&lt;/li&gt;
              &lt;li&gt;學習新語言 新框架&lt;/li&gt;
              &lt;li&gt;投資再高需求的語言上&lt;/li&gt;
              &lt;li&gt;讀書&lt;/li&gt;
              &lt;li&gt;參加研討會 報告&lt;/li&gt;
              &lt;li&gt;opensource&lt;/li&gt;
              &lt;li&gt;讀好的blog&lt;/li&gt;
              &lt;li&gt;write to teach&lt;/li&gt;
              &lt;li&gt;side project&lt;/li&gt;
              &lt;li&gt;追求你愛的&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;chapter3 Prioritize Regularly
            &lt;ul&gt;
              &lt;li&gt;寫下todo list&lt;/li&gt;
              &lt;li&gt;做todo list中 最有價值的事情&lt;/li&gt;
              &lt;li&gt;做重要 但不急的事情&lt;/li&gt;
              &lt;li&gt;減少context switches&lt;/li&gt;
              &lt;li&gt;做一個if的plan, ex: 如果有突然二十分鐘 我會做什麼事情&lt;/li&gt;
              &lt;li&gt;養成排優先順序的習慣&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Part 2: Execute, Execute, Execute&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;chapter4:  Invest in Iteration Speed
            &lt;ul&gt;
              &lt;li&gt;轉換越快 學的越多&lt;/li&gt;
              &lt;li&gt;投資再工具上 ex 開發環境 工具&lt;/li&gt;
              &lt;li&gt;最佳化的你的debug 流程&lt;/li&gt;
              &lt;li&gt;讓你的開發環境最佳化&lt;/li&gt;
              &lt;li&gt;整體性的觀點來看你的開發流程 有沒有可以改善的地方 包含團隊合作&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;chapter5: 「Measure What You Want to Improve」
            &lt;ul&gt;
              &lt;li&gt;量測你的進步&lt;/li&gt;
              &lt;li&gt;找出會讓你最有效率的衡量模式&lt;/li&gt;
              &lt;li&gt;找出你系統的衡量方式 怎樣是好&lt;/li&gt;
              &lt;li&gt;知道你的數字&lt;/li&gt;
              &lt;li&gt;資料的正確性很重要&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;chapter6: 「Validate Your Ideas Early and Often」
            &lt;ul&gt;
              &lt;li&gt;越快的驗證你的想法 會減少浪費資源&lt;/li&gt;
              &lt;li&gt;用小驗證的方式來取代大更新, 常常驗證 常常更新&lt;/li&gt;
              &lt;li&gt;使用A/B testing來驗證你的產品&lt;/li&gt;
              &lt;li&gt;當做自己的專案時 也是要想辦法得到別人常常的建議&lt;/li&gt;
              &lt;li&gt;一直要有回應來驗證你的想法&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;chapter7: 「Improve Your Project Estimation Skills」
            &lt;ul&gt;
              &lt;li&gt;估時程時 將每個專案切成小工作項目 再結合起來計算&lt;/li&gt;
              &lt;li&gt;要留buffer再不確定的事情上面&lt;/li&gt;
              &lt;li&gt;建立可以被測量的里程碑&lt;/li&gt;
              &lt;li&gt;最優先做風險最高的事情&lt;/li&gt;
              &lt;li&gt;知道加班的限制性&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Part 3: Build Long-Term Value&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;chapter 8: 「Balance Quality with Pragmatism」
            &lt;ul&gt;
              &lt;li&gt;code review&lt;/li&gt;
              &lt;li&gt;投資時間在建立好的軟體抽象化 來簡化複雜的問題&lt;/li&gt;
              &lt;li&gt;自動化測試&lt;/li&gt;
              &lt;li&gt;管好你的技術債&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;chapter 9: Minimize Operational Burden
            &lt;ul&gt;
              &lt;li&gt;先做簡單的事情, 能夠重覆使用的套件 就使用 專注再自己業務的部份&lt;/li&gt;
              &lt;li&gt;錯誤要及早知道, 然後直接再log指出錯誤的地方&lt;/li&gt;
              &lt;li&gt;如果當錯誤的時候 要自動化去處理掉, 多想幾次, 是不是會造成之後永遠不知道為什麼會錯&lt;/li&gt;
              &lt;li&gt;多使用idempotence and reentrancy, 會讓你之後再retry錯誤的時候更單純&lt;/li&gt;
              &lt;li&gt;計畫模擬錯誤的情況&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;chapter 10 Invest in Your Team’s Growth
            &lt;ul&gt;
              &lt;li&gt;讓你身邊的人也更成功, 不同階級的工程師 會讓身邊更多的人也更進步&lt;/li&gt;
              &lt;li&gt;找到優秀的人 是最高priority&lt;/li&gt;
              &lt;li&gt;投資時間在新人剛進來的時候 mentoring制度&lt;/li&gt;
              &lt;li&gt;建立大家共有的程式 大家都可以維護互相的程式&lt;/li&gt;
              &lt;li&gt;讓大家更透明化, 討論目前工作的難處 好處 建立大家的知識庫&lt;/li&gt;
              &lt;li&gt;建立好的工程師文化&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 24 Sep 2016 08:00:00 +0800</pubDate>
        <link>/2016/09/24/1/</link>
        <guid isPermaLink="true">/2016/09/24/1/</guid>
        
        <category>weekly</category>
        
        
      </item>
    
      <item>
        <title>7</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“strive 9/10 ~ 9/17”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;use&quot;&gt;Use&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/testdouble/suture&quot;&gt;suture&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Surgical Refactors&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/quilljs/quill&quot;&gt;quill&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Quill Rich Text Editor&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/randy-girard/app_perf&quot;&gt;AppPerf&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Application Performance Monitoring&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;read&quot;&gt;Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;http://railscasts.com/episodes/72-adding-an-environment-revised?view=asciicast&quot;&gt;Rails Adding an Environment&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[css] &lt;a href=&quot;http://csscoke.com/2015/07/31/nth-child_rwd_album/&quot;&gt;超簡單格相簿效果教學，使用 CSS3 nth-child只要五步驟！&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;https://speakerdeck.com/searls/surgical-refactors&quot;&gt;Surgical Refactors&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;https://speakerdeck.com/tanm/learn-programming-essence-from-ruby-patches&quot;&gt;Learn Programming Essence from Ruby patches&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;https://speakerdeck.com/v0dro/data-analysis-in-ruby-with-daru&quot;&gt;Data Analysis in RUby with daru&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;https://speakerdeck.com/k0kubun/scalable-job-queue-system-built-with-docker&quot;&gt;Scalable Job Queue System Built with Docker&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;https://tech.lendinghome.com/being-lazy-with-activerecord-77c470917160#.bjoh1h7bh&quot;&gt;Being Lazy with ActiveRecord&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Enumerator::Lazy&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[SOA] &lt;a href=&quot;http://www.ruanyifeng.com/blog/2016/09/how_amazon_take_soa.html&quot;&gt;亞馬遜如何變成SOA&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[SOA] &lt;a href=&quot;http://www.slideshare.net/hsbt/how-dsl-works-on-ruby&quot;&gt;How DSL works on Ruby&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;book&quot;&gt;Book&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;http://martinfowler.com/books/refactoringRubyEd.html&quot;&gt;Refactoring Ruby Edition&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 17 Sep 2016 08:00:00 +0800</pubDate>
        <link>/2016/09/17/1/</link>
        <guid isPermaLink="true">/2016/09/17/1/</guid>
        
        <category>weekly</category>
        
        
      </item>
    
      <item>
        <title>6</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“strive 9/3 ~ 9/10”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;use&quot;&gt;Use&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/spree/deface&quot;&gt;deface&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Deface is a library that allows you to customize HTML (ERB, Haml and Slim) views in a Rails application without editing the underlying view.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/plataformatec/has_scope&quot;&gt;has_scope&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Has scope allows you to map incoming controller parameters to named scopes in your resources.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;read&quot;&gt;Read&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;http://markdaggett.com/blog/2011/12/01/transactions-in-rails/&quot;&gt;transactions-in-rails&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[article] &lt;a href=&quot;http://www.jianshu.com/p/fdbaf8ced079&quot;&gt;不明白大腦如何運作，自學是無效的&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;http://pawelgoscicki.com/archives/2015/09/testing-database-transactions-explicitly-in-rspec/&quot;&gt;Testing database transactions explicitly with RSpec&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;http://schneems.com/post/22192005006/legacy-concerns-in-rails/&quot;&gt;Legacy Concerns in Rails&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;https://blog.codeship.com/good-module-bad-module/&quot;&gt;Good Module, Bad Module&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[DB] &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NTA1MDEwNg%3D%3D&amp;amp;mid=2650756483&amp;amp;idx=1&amp;amp;sn=da3a5e0b1d56f7bb2085dde763e7db24&amp;amp;scene=0&amp;amp;utm_content=buffer79106&amp;amp;utm_medium=social&amp;amp;utm_source=twitter.com&amp;amp;utm_campaign=buffer#wechat_redirect&quot;&gt;MySQL5.7中InnoDB不可不知的新特性&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;https://speakerdeck.com/shagemann/refactoring-towards-component-based-rails-architectures-at-railsconf&quot;&gt;Component-based Rails Architectures&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[nginx] &lt;a href=&quot;https://imququ.com/post/nginx-http2-post-bug.html#toc-2&quot;&gt;談談Nginx 的HTTP/2 POST Bug&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;book&quot;&gt;Book&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;http://modular-rails.samurails.com/&quot;&gt;modular Rails&lt;/a&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Engines are generated with rails plugin new core –mountable&lt;/li&gt;
      &lt;li&gt;We need an empty Ruby on Rails application to hold our engines as gems&lt;/li&gt;
      &lt;li&gt;When using gems inside an engine, they need to be required when the engine is
loaded&lt;/li&gt;
      &lt;li&gt;Some gems require special attention when we integrate them inside engines instead
of regular Ruby on Rails applications&lt;/li&gt;
      &lt;li&gt;You can check if an engine is present by checking if the module is defined with defined?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;learn&quot;&gt;Learn&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;migration in the engine plugin, how are we going to migrate it from the parent app?&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;initializer :append_migrations do |app|
  unless app.root.to_s.match(root.to_s)
    config.paths['db/migrate'].expanded.each do |p|
      app.config.paths['db/migrate'] &amp;lt;&amp;lt; p
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 10 Sep 2016 08:00:00 +0800</pubDate>
        <link>/2016/09/10/1/</link>
        <guid isPermaLink="true">/2016/09/10/1/</guid>
        
        <category>weekly</category>
        
        
      </item>
    
      <item>
        <title>5</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“strive 8/27 ~ 9/3”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;use&quot;&gt;Use&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/zapnap/resque_mailer&quot;&gt;resque_mailer&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/HashNuke/mailgun&quot;&gt;mailgun&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/DarthSim/carrierwave-bombshelter&quot;&gt;carrierwave-bombshelter&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[gem] &lt;a href=&quot;https://github.com/spree/spree&quot;&gt;spree&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[swagger] &lt;a href=&quot;http://editor.swagger.io/#/&quot;&gt;swagger editer&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;read&quot;&gt;Read&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;http://blog.mz026.rocks/20160821/rails-race-condition-test-rspec&quot;&gt;Rails Race Condition Test With RSpec&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;http://sibevin.github.io/posts/2016-05-14-122743-tools-for-cleanup-rails-code&quot;&gt;一些用來檢驗rails程式碼的工具&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[remote] &lt;a href=&quot;http://www.slideshare.net/clonncd/remote-team-management-2016&quot;&gt;remote team management&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;https://ruby-china.org/topics/24742&quot;&gt;Rails 開發：那些年，我們一起踩過的坑&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;https://speakerdeck.com/gchan/imagetragick-and-rails&quot;&gt;ImageTragick and Rails&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;https://ruby-china.org/topics/24472&quot;&gt;Spree 源碼導讀&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;https://ruby-china.org/topics/26866&quot;&gt;Rails 源码分析之 eager_load! 篇&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;https://ruby-china.org/topics/30052&quot;&gt;Rails Boot Process --- Rails Conf 2016&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[css] &lt;a href=&quot;http://csscoke.com/2013/09/21/%E4%BD%BF%E7%94%A8css3-nth-childn-%E9%81%B8%E5%8F%96%E5%99%A8%E8%A9%B3%E8%A7%A3/&quot;&gt;css3-nth-childn&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[vim] &lt;a href=&quot;https://ruby-china.org/topics/4478&quot;&gt;Rails.vim 高效使用指南&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;http://solnic.eu/2011/08/01/making-activerecord-models-thin.html&quot;&gt;Making ActiveRecord Models Thin&lt;/a&gt;&lt;/p&gt;
    &lt;ol&gt;
      &lt;li&gt;seperate models responsible to behavior and data&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;book&quot;&gt;Book&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[ruby] &lt;a href=&quot;http://objectsonrails.com/&quot;&gt;object on rails&lt;/a&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Exhibit Object Characteristics
        &lt;ol&gt;
          &lt;li&gt;Wraps a single model instance.&lt;/li&gt;
          &lt;li&gt;Is a true Decorator&lt;/li&gt;
          &lt;li&gt;Brings together a model and a context&lt;/li&gt;
          &lt;li&gt;Encapsulates decisions about how to render an object.&lt;/li&gt;
          &lt;li&gt;May modify the behavior of an object.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;Helper
        &lt;ol&gt;
          &lt;li&gt;They are a good place to put general rendering methods which aren’t tied to any particular
model. For instance, we could write a helper for displaying HTML5-style&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;learn&quot;&gt;Learn&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Project manage
    &lt;ul&gt;
      &lt;li&gt;完整計畫，要包含開發環境的資訊。
要先確認每個人都是在同樣的基準點，沒有認知上的誤差。&lt;/li&gt;
      &lt;li&gt;工作目標, 工作項目, 時間預估&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Coding structure
    &lt;ul&gt;
      &lt;li&gt;所有的 service 都是透過 return false 和 .errors.full_messages 來處理錯誤， controller 都會用這樣的邏輯來處理&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 03 Sep 2016 08:00:00 +0800</pubDate>
        <link>/2016/09/03/1/</link>
        <guid isPermaLink="true">/2016/09/03/1/</guid>
        
        <category>weekly</category>
        
        
      </item>
    
  </channel>
</rss>
