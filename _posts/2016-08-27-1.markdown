---
layout:     post
title:      "4"
subtitle:   "weekly learning"
date:       2016-08-27 00:00:00
author:     "ilake"
header-img: "img/post-bg-weekly.jpg"
tags:
    - weekly
---
> “strive 8/20 ~ 8/27”

## Use
* <p>[gem] <a href="https://github.com/huacnlee/rails-settings-cached">rails-settings-cached</a></p>

## Read

* <p>[article] <a href="https://softnshare.wordpress.com/2016/07/19/mindsetofsuccessfulprogrammer/">成功程式設計師凌駕於他人的五個關鍵思維</a></p>

* <p>[ruby] <a href="http://craftingruby.com/posts/2015/06/29/query-objects-through-scopes.html">Delegating to Query Objects through ActiveRecord scopes</a></p>

* [server]
  1. <a href="https://www.digitalocean.com/community/tutorials/a-comparison-of-rack-web-servers-for-ruby-web-applications">A Comparison of (Rack) Web Servers for Ruby Web Applications</a>
  2. <a href="https://www.engineyard.com/articles/rails-server">Rails Server</a>

  * passenger (community) -> web server integration, multi-process single-threaded
  * unicorn -> master/workers, single-process multi-threaded, cluster + load balancer + proxy
  * puma -> concurrency, single-process multi-threaded, cluster + load balancer + proxy
  * thin -> event machine, single-process multi-threaded, cluster + load balancer + proxy

  * preferred way: passenger 5.x，consider others when need special requirement
    * passenger 整合度高，設定方便。
    * unicorn 在 passenger 5.x 版本出現前，是部署主力。如果有人力可以照顧 server，是不錯用。
    * puma 現在是 rails 5 預設的開發用 application server。在 concurrency 能力上比較好。
    * thin 則是如果你有用 event machine 的設計，會建議用的項目。
    * unicorn, puma, thin 都必須用 cluster + proxy 的方式運作，才能應付高 request 的狀況。

* [MongoDB]
  1. <a href="https://gorails.com/guides/setting-up-rails-4-with-mongodb-and-mongoid">Setting Up Rails 4 with MongoDB and Mongoid</a>
  2. <a href="http://railscasts.com/episodes/194-mongodb-and-mongomapper?view=asciicast">MongoDB and MongoMapper</a>
  3. <a href="http://railscasts.com/episodes/238-mongoid-revised?view=asciicast">Mongoid</a>
  4. <a href="http://www.railstips.org/blog/archives/2009/12/18/why-i-think-mongo-is-to-databases-what-rails-was-to-frameworks/">Why I think Mongo is to Databases what Rails was to Frameworks</a>

* <p>[log] <a href="https://medium.com/@poga/%E8%90%AC%E4%BA%8B%E8%90%AC%E7%89%A9%E7%9A%86%E6%98%AF-log-%E7%B3%BB%E7%B5%B1%E6%9E%B6%E6%A7%8B%E4%B9%9F%E4%BE%86%E9%BB%9E%E7%A7%91%E6%99%AE-caf3029359f8#.9nwgz568v">萬事萬物皆是 LOG — 系統架構也來點科普</a></p>

* [js] what's this?
  * this 取決於function被呼叫的方式
  * function執行時,這個scope的owner
  * 當function是某個事件的method, this指的就是上層物件
  * 透過call()/apply()可以指定this是誰,強制指定某個物件作為該function的this

## Book

* <p> <a href="http://shop.oreilly.com/product/0636920019664.do">Sinatra: Up and Running</a></p>
