---
layout:     post
title:      "25"
subtitle:   "weekly learning"
date:       2017-02-25 00:00:00
author:     "ilake"
header-img: "img/post-bg-weekly.jpg"
tags:
    - weekly
---
> “strive 2/18 ~ 2/25”

## Use

* <p>[gem] <a href="https://github.com/cookpad/expeditor">expeditor</a></p>
  * Expeditor is a Ruby library that provides asynchronous execution and fault tolerance for microservices.

## Read

* <p>[ruby] <a href="https://www.sitepoint.com/ruby-uses-memory/">How Ruby Uses Memory</a></p>
  * Object Retention
  * RUBY_GC_HEAP_GROWTH_FACTOR, ruby will retentino memory

* <p>[ruby] <a href="http://www.mikeperham.com/2009/05/25/memory-hungry-ruby-daemons/">Memory-hungry Ruby daemons</a></p>

* <p>[ruby] <a href="http://www.rubyenterpriseedition.com/documentation.html#_garbage_collector_performance_tuning">Garbage collector performance tuning </a><p>

* <p>[api] <a href="http://taobaofed.org/blog/2017/02/16/a-guide-to-api-design/">从达标到卓越 —— API 设计之道</a></p>
  * logic & abstract
  * domain knowledge
  * language sense

* <p>[api] <a href="https://github.com/lifesinger/blog/issues/164">Page Visibility 的 API 设计</a></p>
  * backward compatibility
    * document.hidden vs document.visible？
  * scalability
  * consistency

* <p>[api] <a href="https://github.com/lifesinger/blog/issues/119">我心目中的优秀 API</a></p>
  * simple: easy to understand
  * complete: all soluctions on specific domain

* <p>[ruby] <a href="http://teotti.com/deploy-parts-of-a-ruby-on-rails-application/">Deploy parts of a Ruby on Rails application</a></p>
  *  how to deploy portions of a Ruby on Rails application to separate servers with the use of Ruby Gems and Rails Engines

* <p>[ruby] <a href="http://teotti.com/reduce-memory-footprint-requiring-portions-of-your-component-based-rails-applications/">Reduce memory footprint requiring portions of your component based Rails application with Bundler</a></p>
  *  you can require only the necessary portion to reduce memory usage and speed up the bundling process

* <p>[bundler] <a href="http://myronmars.to/n/dev-blog/2012/12/5-reasons-to-avoid-bundler-require">5 Reasons to Avoid Bundler.require</a></p>
  * `Bundler.require` is a shortcut for people who can't (or don't want to) write their own requires.
  * DHH: Not having to manually track your dependencies feels liberating. Like not having to track memory allocation by hand.

## Book

## Video

* <p>[learn] <a href="https://simpleprogrammer.com/products/learn-anything/">10 steps to learn anything quickly</a></p>
  * 1. get the big picture
    * high level topic you want to learn
    * break high level topic up into smaller subtopics
  * 2. determine the scope
    * what subtopic do you want to learn
    * what do you plan on doing with the knowledge you will get from learning about the topic
    * what time frame do you expect to learn
  * 3. define success
    * what specific actions could I do when I got the knowledge
    * which specific action are the most valuable for me
    * make success criteria measurable
  * 4. find resources
    * start with books, list the best 5 books on your topic and list them
    * list all the other resources you can think of (blog, internet articles)
  * 5. create a learning plan
    * list best 5 resource and list the chapters of them
    * which repeated the most
  * 6. filter resources
    * what criteria do you think is the most important for judging the resources you will use for learning
  * 7. learn enough to get started
    * waht is the gereral idea of this module in your learning plan
  * 8. play around
    * what can you do to 'play around' with the subject you are learning about
  * 9. learn enough to do something useful
    * what are the most important questions you hope to find answers to during this step
    * what questions are still unanswered after completing this step
    * what do you think would be an effective way to teach what you have larned in this step
    * what is the most important thing you have larned in this step
  * 10. teach
    * what do you think would be the best way to present the material you have larned

## Learn
